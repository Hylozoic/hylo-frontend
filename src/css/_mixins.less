/* Variables for Mixins */

//avatar sizes
@avatar-size-xs: 27px;
@avatar-size-sm: 33px;
@avatar-size-default: 60px;
@avatar-size-lg: 140px;
@avatar-size: @avatar-size-default;

// set up a div whose height will always be $percent of its width
// e.g. http://jsfiddle.net/B8FU8/2441/
// via: http://stackoverflow.com/questions/5445491/height-equal-to-dynamic-width-css-fluid-layout
.fluid-height(@percent) {
  display: inline-block;
  position: relative;

  &:after {
    content: '';
    display: block;
    margin-top: @percent;
  }
  > div {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
}

/* Mixins for our app */
.rounded-button() {
  .proxima-nova-regular;
  font-size: 14px;
  text-decoration: none; //this removes hover effect
  color: @text-dark;
  background-color: white;
  cursor: pointer;
  border: 1px solid @light-gray;
  border-radius: 15px;
  display: inline-block;
  height: 32px;
  line-height: 30px;
  padding: 0px 15px;
  outline: none;
  > i {
    position: relative;
    top: 1px;
  }
  &:active {
    background-color: @faint-gray;
  }
}

.rounded-button-dark {
  .rounded-button;
  color: white;
  background-color: @dark-gray;
}

.rounded-button-clear {
  .rounded-button;
  color: white;
  background-color: transparent;
}

.transform (@rule) {
  transform: @rule;
  -ms-transform: @rule; /* IE 9 */
  -webkit-transform: @rule; /* Safari and Chrome */
}

.blur(@px) {
  filter: blur(@px);
  // Browser Specific
  -webkit-filter: blur(@px);
  -moz-filter: blur(@px);
  -o-filter: blur(@px);
  -ms-filter: blur(@px);
}

.proxima-nova(@weight) {
  font-family: "proxima-nova",sans-serif;
  font-style: normal;
  font-weight: @weight;
}

.proxima-nova-light() {
  .proxima-nova(300);
}

.proxima-nova-regular() {
  .proxima-nova(400);
}

.proxima-nova-semibold() {
  .proxima-nova(600);
}

.proxima-nova-bold() {
  .proxima-nova(700);
}

.myriad-semi-italic() {
  font-family: "myriad-pro",sans-serif;
  font-style: italic;
  font-weight: 600;
}

.droid-regular() {
  font-family: "droid-serif",serif;
  font-style: normal;
  font-weight: 400;
}

.border-radius(@px) {
  -moz-border-radius: @px;
  -webkit-border-radius: @px;
  border-radius: @px;
}

.large-header() {
  .proxima-nova-semibold;
  font-size: 32px;
}

.section-title() {
  .proxima-nova-semibold;
  text-transform: uppercase;
  font-size: 17px;
  letter-spacing: 3.5px;
}

.medium-header() {
  .proxima-nova-semibold;
  font-size: 24px;
}

.seed-meta-text() {
  .proxima-nova-light;
  font-size: 13px;

  &, a {
    color: @text-light-gray;
  }
  a:hover {
    color: @link-color;
  }
}

.seed-type-text(@color) {
  .proxima-nova-bold;
  font-size: 14px;
  letter-spacing: 1.5px;
  color: @color;
}

.seed-title-text {
  .proxima-nova-semibold;
  font-size: 18px;
  line-height: 20px;
  color: @title-color;
}

.seed-body-text() {
  .proxima-nova-light;
  font-size: 15px;
  color: @text-medium-dark;
  line-height: 1.25em;
}

.seed-username-text() {
  .seed-meta-text;
  margin-top: 6px;
  text-align: center;
  line-height: 1.4;
  overflow: hidden;
  word-wrap: break-word;
  max-height: 78px;
}

.medium-title-text() {
  .proxima-nova-regular;
  text-transform: uppercase;
  font-size: 16px;
  letter-spacing: 2.4px;
}

.small-title-text() {
  .proxima-nova-regular;
  text-transform: uppercase;
  font-size: 13px;
  letter-spacing: 2.4px;
}

.small-bold-title-text() {
  .small-title-text;
  .proxima-nova-bold;
}

.large-body-text() {
  .proxima-nova-regular;
  font-size: 20px;
  line-height: 1.4em;
}

.big-close() {
  .proxima-nova-bold;
  &, &:hover { color: @default-text; }
  font-size: 42px;
  cursor: pointer;
  text-decoration: none;
  opacity: 1;
  width: 50px;
  text-align: center;
  height: 50px;
  line-height: 50px;
  vertical-align: middle;
  @media (max-width: @screen-xs-max) {
    font-size: 28px;
    height: 40px;
    line-height: 40px;
    width: 40px;
    margin-right: -12px;
    margin-top: 8px;
  }
}

.borderless-text-input() {
  border: none;
  box-shadow: none;
  outline: none;
  background-color: transparent;
  margin-left: 0;
}

//mixin to size an avatar and add display properties
.user-avatar(@size: @avatar-size-default) {
  @avatar-size: 60px;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  height: @size;
  width: @size;
  border-radius: @size/2;
}

//classes to use the avatar at various sizes
.user-avatar-lg() {
  .user-avatar(@avatar-size-lg);
}

.user-avatar-sm() {
  .user-avatar(@avatar-size-sm);
}

.user-avatar-xs() {
  .user-avatar(@avatar-size-xs);
}

.user-avatar-block() {
  display: block;
  position: initial;
}

// mixin to add a margin to some element positioned next to an avatar
.add-avatar-margin(@size: @avatar-size-default + 30, @use-properties: true) {
  margin-left: @size;

  & when (@use-properties = true) {
    float: none;
    display: inline-block;
    position: relative;
  }

}

@avatar-margin-xs-default: @avatar-size-xs + 10;
@avatar-margin-sm-default: @avatar-size-sm + 30;
@avatar-margin-md-default: @avatar-size-default + 30;
@avatar-margin-lg-default: @avatar-size-lg + 30;

//mixins for adding margins at various avatar sizes
.avatar-margin-xs(@use-properties: true, @add-margin: 10) {
  .add-avatar-margin(@avatar-size-xs+@add-margin, @use-properties);
}

.avatar-margin-sm(@use-properties: true, @add-margin: 30) {
  .add-avatar-margin(@avatar-size-sm+@add-margin, @use-properties);
}

.avatar-margin-med(@use-properties: true, @add-margin: 30) {
  .add-avatar-margin(@avatar-size-default+@add-margin, @use-properties);
}

.avatar-margin-lg(@use-properties: true, @add-margin: 30) {
  .add-avatar-margin(@avatar-size-lg+@add-margin, @use-properties);
}

//helper to remove link display properties from an element
.remove-link-display(@color: @default-text) {
  &, &:hover {
    color: @color;
    text-decoration: none;
  }
}

.dark-background-gradient() {
  background-color: rgba(0, 0, 0, 0.6);
  background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.7)),
  linear-gradient(to left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.7)),
  linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(0, 0, 0, 1));
}

.light-background-gradient() {
  background-color: rgba(255, 255, 255, 0.6);
  background: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.7)),
  linear-gradient(to left, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.7)),
  linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 1));
}

.round-input {
  -webkit-appearance: none;
  border: 2px solid @default-border;
  border-radius: 15px;
  outline: none;
  margin: 0;
  display: inline-block;
  position: relative;
  .proxima-nova(100);
}

.round-radio() {
  .round-input;
  padding: 7px;
}

.round-checkbox() {
  .round-input;
  padding: 11px;

  &:checked:after {
    content: '\2714';
    font-size: 16px;
    position: absolute;
    top: 2px;
    left: 4px;
    color: @text-gray;
  }
}

